<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 *                  Aozan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU General Public License version 3 or later
 * and CeCILL. This should be distributed with the code. If you
 * do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *      http://www.cecill.info/licences/Licence_CeCILL_V2-en.html
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Aozan project and its aims,
 * or to join the Aozan Google group, visit the home page at:
 *
 *      http://outils.genomique.biologie.ens.fr/aozan
 *
 */
-->
<document>

  <properties>
    <title>QC Lanes tests</title>
    <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
  </properties>

  <body>

    <section name="Global quality control tests">


      <p>User can add global tests to be performed in this steps. The order of the parameters in the Aozan configuration
      file will be reused in the report generated by this step.  Each test can use
      several parameters and contains always an "<b>enable</b>" property to activate the test. Usually a property named "<b>interval</b>" exists
      for each test, however if this property is not set, the value will be computed but not checked if it is the correct interval.
      Usually the global tests reuse data collected from lane tests or sample tests. Please report to those documentation pages for more information.
      You will find below all the parameters for all the available tests in Aozan:</p>

      <h4>Configuration global quality tests</h4>
        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>Description</th></tr>

          <tr><td>qc.test.global.base.count.enable</td><td>boolean</td><td>False</td><td>Enable global base count test</td></tr>
          <tr><td>qc.test.global.non.indexed.base.count.enable</td><td>boolean</td><td>False</td><td>Enable global non indexed global base count test</td></tr>

          <tr><td>qc.test.global.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global raw cluster count test</td></tr>
          <tr><td>qc.test.global.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.mean.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global mean raw cluster count test</td></tr>
          <tr><td>qc.test.global.mean.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.median.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global median raw cluster count test</td></tr>
          <tr><td>qc.test.global.median.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.raw.cluster.sd.enable</td><td>boolean</td><td>False</td><td>Enable global raw cluster standard deviation test</td></tr>
          <tr><td>qc.test.global.raw.cluster.sd.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.pf.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global passing filter cluster count test</td></tr>
          <tr><td>qc.test.global.pf.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.mean.pf.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global mean passing filter cluster count test</td></tr>
          <tr><td>qc.test.global.mean.pf.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.median.pf.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global median passing filter cluster count test</td></tr>
          <tr><td>qc.test.global.median.pf.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.pf.cluster.sd.enable</td><td>boolean</td><td>False</td><td>Enable global passing filter cluster standard deviation test</td></tr>
          <tr><td>qc.test.global.pf.cluster.sd.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.pf.cluster.percent.enable</td><td>boolean</td><td>False</td><td>Enable global passing filter percent test</td></tr>
          <tr><td>qc.test.global.pf.cluster.percent.interval</td><td>double interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.phix.align.percent.enable</td><td>boolean</td><td>False</td><td>Enable global PhiX align percent test</td></tr>
          <tr><td>qc.test.global.phix.align.percent.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.phix.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global PhiX raw cluster count test</td></tr>
          <tr><td>qc.test.global.phix.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.mean.phix.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global mean PhiX raw cluster count test</td></tr>
          <tr><td>qc.test.global.mean.phix.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.median.phix.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable global median PhiX raw cluster count test</td></tr>
          <tr><td>qc.test.global.median.phix.raw.cluster.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.phix.raw.cluster.sd.enable</td><td>boolean</td><td>False</td><td>Enable global PhiX raw cluster standard deviation test</td></tr>
          <tr><td>qc.test.global.phix.raw.cluster.sd.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.undetermined.cluster.percent.enable</td><td>boolean</td><td>False</td><td>Enable global undetermined cluster percent test</td></tr>
          <tr><td>qc.test.global.undetermined.cluster.percent.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.cycle.count.enable</td><td>boolean</td><td>False</td><td>Enable global cycle count test</td></tr>
          <tr><td>qc.test.global.cycle.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.lane.count.enable</td><td>boolean</td><td>False</td><td>Enable global lane count test</td></tr>
          <tr><td>qc.test.global.lane.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.project.count.enable</td><td>boolean</td><td>False</td><td>Enable global project count test</td></tr>
          <tr><td>qc.test.global.project.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.sample.count.enable</td><td>boolean</td><td>False</td><td>Enable global sample count test</td></tr>
          <tr><td>qc.test.global.sample.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.sample.count.enable</td><td>boolean</td><td>False</td><td>Enable global sample count test</td></tr>
          <tr><td>qc.test.global.sample.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.sample.count.enable</td><td>boolean</td><td>False</td><td>Enable global sample count test</td></tr>
          <tr><td>qc.test.global.sample.count.interval</td><td>integer interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.error.rate.enable</td><td>boolean</td><td>False</td><td>Enable global error rate test</td></tr>
          <tr><td>qc.test.global.error.rate.interval</td><td>double interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.cluster.density.enable</td><td>boolean</td><td>False</td><td>Enable global cluster density test</td></tr>
          <tr><td>qc.test.global.cluster.density.interval</td><td>double interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.cluster.density.pf.enable</td><td>boolean</td><td>False</td><td>Enable global cluster passing filter density test</td></tr>
          <tr><td>qc.test.global.cluster.density.pf.interval</td><td>double interval</td><td>Not set</td><td>Interval for valid values</td></tr>

          <tr><td>qc.test.global.q30.percent.enable</td><td>boolean</td><td>False</td><td>Enable global Q30 percent test</td></tr>
          <tr><td>qc.test.global.q30.percent.interval</td><td>double interval</td><td>Not set</td><td>Interval for valid values</td></tr>

       </table>

       <p>An example of table built with lanes global tests.</p>
       <div align="center">
           <img src="images/qc_global_tests_part1.png" alt="example on report with run data" border="1"/>
           <img src="images/qc_global_tests_part2.png" alt="example on report with run data" border="1"/>
       </div>



       <h5>Syntax of the interval values</h5>

       <p>User can define intervals as the next examples:</p>
       <ul>
         <li><b>[,10]</b> From - infinite to 10 (included)</li>
         <li><b>[,10[</b> From - infinite to 10 (excluded)</li>
         <li><b>[,10)</b> From - infinite to 10 (excluded)</li>
         <li><b>]2,10[</b> From 2 (excluded) to 10 (excluded)</li>
         <li><b>(2,10[</b> From 2 (excluded) to 10 (excluded)</li>
         <li><b>[2,10]</b> From 2 (included) to 10 (included)</li>
         <li><b>[2, ]</b> From 2 (included) to + infinite</li>
       </ul>

    </section>

  </body>

</document>

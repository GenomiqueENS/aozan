<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 *                  Aozan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU General Public License version 3 or later
 * and CeCILL. This should be distributed with the code. If you
 * do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *      http://www.cecill.info/licences/Licence_CeCILL_V2-en.html
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Aozan project and its aims,
 * or to join the Aozan Google group, visit the home page at:
 *
 *      http://outils.genomique.biologie.ens.fr/aozan
 *
 */
-->
<document>

  <properties>
    <title>QC samples tests</title>
    <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
  </properties>

  <body>

    <section name="Samples quality control tests">

      <p>User can add samples tests to be performed in this steps.
      The order of the parameters in the Aozan configuration file will be reused in the report generated by this step.
      Each test can use several parameters and contains always an "<b>enable</b>" property to activate the test.
      Usually a property named "<b>interval</b>" exists for each test, however if this property is not set, the value will be computed but not checked if it is the correct interval.
      You will find below all the parameters for all the available tests in Aozan.</p>


      <p>For the quality control sample test, the report brings together three source of data :</p>
      <ul>
        <li><a href="#data_illumina">Data supplied by the demultiplexing step</a></li>
        <li><a href="#fastqc">FastQC</a>
          <ul>
            <li><a href="#fcconfiguration">General configuration</a></li>
            <li><a href="#fctests">Configuration tests</a></li>
            <li><a href="#overrepresented">Enhancement of module Overrepresented sequences</a></li>
          </ul>
        </li>
        <li><a href="#contamination">Contamination detection with FastQ Screen</a>
          <ul>
            <li><a href="#fqsconfiguration">General configuration</a></li>
            <li><a href="#fqstests">Configuration tests</a></li>
          </ul>
        </li>
        <li><a href="#recoveryclusters">Analysis undetermined clusters from demultiplexing.</a></li>
      </ul>

      <a name="data_illumina"/>
      <subsection name="Sample quality tests from demultiplexing step">

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.test.sample.raw.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable raw clusters count test</td></tr>
          <tr><td>qc.test.sample.raw.cluster.count.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.pf.cluster.count.enable</td><td>boolean</td><td>False</td><td>Enable passing filter count test</td></tr>
          <tr><td>qc.test.sample.pf.cluster.count.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.pf.percent.enable</td><td>boolean</td><td>False</td><td>Enable passing filter percent test</td></tr>
          <tr><td>qc.test.sample.pf.percent.interval</td><td>double interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.in.lane.percent.enable</td><td>boolean</td><td>False</td><td>Enable in lane percent test</td></tr>
          <tr><td>qc.test.sample.in.lane.percent.distance</td><td>double</td><td>0.05</td><td>Interval for valid values of in lane percent tet. The interval is set according to the theoretical percent (1.0/sampleCount)</td></tr>
          <tr><td>qc.test.sample.q30.percent.sample.enable</td><td>boolean</td><td>False</td><td>Enable Q30 percent test</td></tr>
          <tr><td>qc.test.sample.q30.percent.sample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.base.pf.mean.quality.score.sample.enable</td><td>boolean</td><td>False</td><td>Enable base passing filter mean quality sample test</td></tr>
          <tr><td>qc.test.sample.base.pf.mean.quality.score.sample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.recoverable.raw.cluster.count.sample.enable</td><td>boolean</td><td>False</td><td>Enable recoverable raw cluster count sample test: compute raw cluster count that can be recovered from the undetermined FASTQ file with more one mismatch that has been used in the demultiplexing step. </td></tr>
          <tr><td>qc.test.sample.recoverable.raw.cluster.count.sample.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.recoverable.pf.cluster.count.sample.enable</td><td>boolean</td><td>False</td><td>Enable recoverable passing filter cluster sample test: compute passing filter cluster count that can be recovered from undetermined FASTQ file with more one mismatch that has been used in the demultiplexing step. </td></tr>
          <tr><td>qc.test.sample.recoverable.pf.cluster.count.sample.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.cluster.recovery.report.sample.enable</td><td>boolean</td><td>False</td><td>Enable recovery report</td></tr>
        </table>
        <p>The explanation to construct intervals is <a href="#syntax_interval">here.</a></p>
      </subsection>

      <a name="fastqc"/>
      <subsection name="Sample quality tests from FastQC">
        <p>Aozan launch <a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/" target="_blank">FastQC</a> on each sample (using parallel computation) and creates a quality control report file.
        If no FastQC test property is enabled, FastQC will not be launched on FASTQ files.</p>

        <a name="fctests"/>
        <h5>Configuration tests</h5>
        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.test.sample.fastqc.basic.stats.enable</td><td>boolean</td><td>False</td><td>Enable FastQC basic stats test</td></tr>
          <tr><td>qc.test.sample.fastqc.per.base.quality.scores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC per base quality scores test</td></tr>
          <tr><td>qc.test.sample.fastqc.per.sequence.quality.scores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC per sequence quality scores test</td></tr>
          <tr><td>qc.test.sample.fastqc.per.base.sequence.content.enable</td><td>boolean</td><td>False</td><td>Enable FastQC per base sequence content test</td></tr>
          <tr><td>qc.test.sample.fastqc.per.sequence.gc.content.enable</td><td>boolean</td><td>False</td><td>Enable FastQC per sequence GC ccontent test</td></tr>
          <tr><td>qc.test.sample.fastqc.n.content.enable</td><td>boolean</td><td>False</td><td>Enable FastQC ncontent test</td></tr>
          <tr><td>qc.test.sample.fastqc.sequence.length.distribution.enable</td><td>boolean</td><td>False</td><td>Enable FastQC sequence length distribution test</td></tr>
          <tr><td>qc.test.sample.fastqc.duplication.level.enable</td><td>boolean</td><td>False</td><td>Enable FastQC duplication level test</td></tr>
          <tr><td>qc.test.sample.fastqc.overrepresented.sequences.enable</td><td>boolean</td><td>False</td><td>Enable FastQC overrepresented sequences test</td></tr>
          <tr><td>qc.test.sample.fastqc.kmer.content.enable</td><td>boolean</td><td>False</td><td>Enable FastQC kmer content test</td></tr>
          <tr><td>qc.test.sample.fastqc.per.tile.sequence.quality.enable</td><td>boolean</td><td>False</td><td>Enable FastQC per tile sequence quality test</td></tr>
          <tr><td>qc.test.sample.fastqc.adapter.content.enable</td><td>boolean</td><td>False</td><td>Enable FastQC adapter content test</td></tr>
        </table>

        <a name="fcconfiguration"/>
        <h5>General configuration of FastQC</h5>
        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.conf.fastqc.contaminant.file</td><td>string</td><td>Not set</td><td>Specifies a file path which contains the list of contaminants to screen overrepresented sequences. The content of the file will override the default list of contaminants. The file must contain sets of named contaminants in the form name[tab]sequence. Lines prefixed with a hash will be ignored. (FastQC <tt>-c</tt> / <tt>--contaminants</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.kmer.size</td><td>integer</td><td>7</td><td>Specifies the length of Kmer to look for in the Kmer content module.  Specified Kmer length must be between 2 and 10. (FastQC <tt>-k</tt> / <tt>--kmers</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.nogroup</td><td>boolean</td><td>False</td><td>Disable grouping of bases for reads &gt;50bp. (FastQC <tt>--nogroup</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.adapter.file</td><td>string</td><td>No set</td><td>Path to a specific adapter file, replace the default adapter file. (FastQC <tt>-a</tt> / <tt>--adapters</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.limits.file</td><td>string</td><td>No set</td><td>Path to a specific limits file, replace the default file. (FastQC <tt>-l</tt> / <tt>--limits</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.expgroup</td><td>boolean</td><td>False</td><td>Use exponential base groups in graph. (FastQC parameter)</td></tr>
          <tr><td>qc.conf.fastqc.casava</td><td>boolean</td><td>False</td><td>Illumina FASTQ file. (FastQC <tt>--casava</tt> parameter)</td></tr>
          <tr><td>qc.conf.fastqc.nofilter</td><td>boolean</td><td>False</td><td>Option for filtering bad Illumina FASTQ entries. (FastQC parameter)</td></tr>
          <tr><td>qc.conf.fastqc.process.undetermined.samples</td><td>boolean</td><td>True</td><td>Run FastQC on undetermined indices samples, default at false.</td></tr>
          <!--tr><td>qc.conf.fastqc.nano</td><td>boolean</td><td>False</td><td>Run FastQC on nanopore technology which use Fast5 format file instead of FASTQ, default at false.</td></tr-->
          <tr><td>qc.conf.fastqc.unzip.report.file</td><td>boolean</td><td>False</td><td>Unzip the FastQC Zip report file.</td></tr>
          <tr><td>qc.conf.fastqc.keep.zip.report.file</td><td>boolean</td><td>True</td><td>Keep the FastQC Zip report file.</td></tr>
        </table>

        <p>An example of table built with sample quality tests</p>
        <div align="center">
          <img src="images/qc_sample_test_800px.png" alt="example on report with demultiplexing and fastqc data" />
        </div>

        <a name="overrepresented"/>
        <h5>Enhancement to module &#145;Overrepresented sequences&#146;</h5>
        <p>The output of &#145;Overrepresented Sequences&#146; module from FastQC has been improved for sequences not found in contaminant list.
        We (optionally) launch a blast on sequences with &#145;no hit&#146; source. The report prints the best hit.
        </p>

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.conf.fastqc.blast.enable</td><td>boolean</td><td>false</td><td>Enable the blast search if not hit found for an overrepresented sequence</td></tr>
          <tr><td>qc.conf.fastqc.blast.path</td><td>string</td><td>/usr/bin/blastn</td><td>Path of the blast executable. It can run <tt>blastn</tt> from ncbi-blast+ or <tt>blastall</tt> from blast2</td></tr>
          <tr><td>qc.conf.fastqc.blast.db.path</td><td>string</td><td>/home/aozan/ncbi_database_nt/nt</td><td>Path to the nt database (where is located the <tt>nt.nal</tt> file)</td></tr>
          <tr><td>qc.conf.fastqc.blast.arguments</td><td>string</td><td>Not set</td><td>Blast parameters. <b>DO NOT</b> use the following blast options: <tt>-d</tt> (blastn), <tt>-db</tt> (path to database), <tt>-outfmt</tt> (output type, must be in xml) and <tt>-num-threads</tt> (number processor)</td></tr>
        </table>

        <p>A Docker container can be use to launch Blast.
        When the Docker is enabled for Blast, Blast2 2.2.26 will be use.</p>

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.conf.fastqc.blast.use.docker</td><td>boolean</td><td>false</td><td>Use Docker container to launch Blast</td></tr>
          <tr><td>docker.uri</td><td>string</td><td>unix:///var/run/docker.sock</td><td>Docker deamon URI</td></tr>
        </table>

        <p>Example of new module &#145;Overrepresented sequences&#146;: </p>
        <div align="center"><img src="images/qc_fastqc_overrepresented_blast_700px.png" alt="module overrepresented sequences with results from blastn"  border="1"/></div>
      </subsection>

      <a name="contamination"/>
      <subsection name="Sample quality tests from contamination detection">

        <p>Aozan includes a fast Java <a href="http://www.bioinformatics.babraham.ac.uk/projects/fastq_screen/">FastQ Screen</a> implementation.
        This module maps sample reads on a list of reference genomes for assessing sample contamination and the ratio of the excepted genome in the sample.
        It creates a report file with values for each genome.</p>

        <p>This step assesses the sample contamination from the FASTQ files.
        To do this, Aozan uses the <a href="http://www.bioinformatics.babraham.ac.uk/projects/fastq_screen/"  target="_blank">FastQ Screen</a> strategy.
        FastQ Screen allows to screen a library of sequences in Fastq format against a set of sequence databases.</p>

        <p>The FastQ Screen code has been rewritten for Aozan and additional values are now calculated.
        Here we use <a href="http://bowtie-bio.sourceforge.net/manual.shtml"  target="_blank">bowtie</a> to align reads on genomes or on contaminant databases like adapter sequences, PhiX and <a href="http://www.arb-silva.de/no_cache/download/archive/release_111/Exports">ribosomes databases</a>.
        Moreover it aligns reads samples on the genome defined in the bcl2fastq sample sheet file.
        </p>

        <p>To avoid too long computation, the mapping on genomes is limited to a small set of the reads of the FASTQ files.
        By default 200,000 PF reads (passing illumina filters) are used for each sample (It is enough for estimate the contamination in a sample).</p>

        <p>Aozan uses <a href="http://outils.genomique.biologie.ens.fr/eoulsan"  target="_blank">Eoulsan</a> to handle alignments and especially the <a href="http://outils.genomique.biologie.ens.fr/eoulsan/datarepositories.html" target="_blank">repository system for genomes and genomes indexes</a>.</p>

        <p>If no FastQ Screen test property is enabled, FastQ Screen will not be launched on FASTQ files.</p>

        <a name="fqstests"/>
        <h5>Configuration tests</h5>

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>Description</th></tr>
          <tr><td>qc.test.sample.fastqscreen.mapped.except.ref.genome.percent.enable</td><td>boolean</td> <td>False</td><td>Enable the percent of reads mapped at least one reference genome, except on genome sample test</td></tr>
          <tr><td>qc.test.sample.fastqscreen.mapped.except.ref.genome.percent.interval</td><td>double interval</td><td>[0, 0.1]</td><td>Interval of valid values</td></tr>
          <tr><td>qc.test.sample.fastqscreen.mapped.percent.enable</td><td>boolean</td><td>False</td><td>Add columns in the report with the percent of reads mapped for each reference genome</td></tr>
          <tr><td>qc.test.sample.fastqscreen.mapped.percent.interval</td><td>double interval</td><td>[0, 0.1]</td> <td>Interval of valid values</td></tr>
          <tr><td>qc.test.sample.fastqscreen.report.enable</td><td>boolean</td><td>False</td><td>Enable FastQ Screen full report link column</td></tr>
        </table>

        <p>The explanation to construct intervals is <a href="#syntax_interval">here.</a></p>

        <a name="fqsconfiguration"/>
        <h5>General configuration for launch the mapper</h5>

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>Description</th></tr>
          <tr><td>qc.conf.fastqscreen.genome.aliases.path</td><td>string</td><td>Not set</td> <td>Path to the file which make the match between genome name in bcl2fastq samplesheet file and the genome name used for bowtie index. If a genome name does not exist in the alias file, it will be added at the end of the file</td></tr>
          <tr><td>qc.conf.fastqscreen.genome.descs.path</td><td>string</td><td>Not set</td><td>Path to the genome descriptions repository. The genome description file contains some basic informations about the genome like the names of the chromosome and their lengths. The genome description files allow to avoid useless genome sequence parsing once it has been already parsed forn a previous run</td></tr>
          <tr><td>qc.conf.fastqscreen.genomes.path</td><td>string</td><td>Not set</td><td>Path to the genomes repository</td></tr>
          <tr><td>qc.conf.fastqscreen.mapper.indexes.path</td><td>string</td><td>Not set</td><td>Path to the genome indexes repository</td></tr>
          <tr><td>qc.conf.fastqscreen.genomes</td><td>string</td><td>phix, adapters</td><td>List of reference genomes to always use by fastqscreen</td></tr>
          <tr><td>qc.conf.fastqscreen.mapper</td><td>string</td><td>bowtie</td><td>In a next version, it will be  possible to choice between bowtie and bowtie2. Per default, bowtie is used.</td></tr>
          <tr><td>qc.conf.fastqscreen.mapper.arguments</td><td>string</td><td>-l 20 -k 2 --chunkmbs 512</td><td>Arguments of the mapper, in paired-end mode, &#145;--maxins 1000&#146; is added</td></tr>
          <tr><td>qc.conf.fastqscreen.mapping.skip.control.lane</td><td>boolean</td><td>True</td><td>Enable contamination detection on control lane</td></tr>
          <tr><td>qc.conf.fastqscreen.mapping.ignore.paired.end.mode</td><td>boolean</td><td>True</td><td>If true for a run paired-end, the detection contamination will be only performed on the first of the two reads. The values for the second read will be the same as first read</td></tr>
          <tr><td>qc.conf.fastqscreen.fastq.max.reads.parsed</td><td>integer</td><td>200000</td><td>Number of reads to use for each mapping. Only the reads with Illumina passing filter will be selected. The selected reads will be written in a dedicated temporary file. If value is set to -1, all reads of the FASTQ files will be used</td></tr>
          <tr><td>qc.conf.fastqscreen.fastq.reads.pf.used</td> <td>integer</td> <td>30000000</td> <td>The temporary FASTQ files are created by parsing at most this maximum number of reads in the FASTQ file source. If value is set to -1, it browses all the entries of the FASTQ files</td></tr>
          <tr><td>qc.conf.fastqscreen.xsl.file</td><td>string</td><td>Not set</td><td>Path to a specific XSL stylesheet file to use for creating the FastQ Screen HTML report</td></tr>
          <tr><td>qc.conf.fastqscreen.process.undetermined.samples</td><td>boolean</td><td>false</td><td>Run FastQ Screen on undetermined indices FASTQ files on all genomes available for the run</td></tr>
        </table>

        <p>An example of a HTML report of quality control with major values of FastQ Screen:
          <div align="center"><img src="images/qc_sample_fqs_500px.png" alt="example on report with fastqscreen data"/></div>
        </p>

        <p>When the use click on a link of the last column, it will be redirected to a dedicated FastQ Screen HTML report. The following figure show a HTML FastQ Screen report with four reference genomes and the genome sample (mm10):
          <div align="center"><img src="images/qc_report_html_fastqscreen_500px.png" alt="example report html fastqscreen"/></div>
        </p>

        <p>This report contains for each genome the following values:
          <ul>
            <li><b>%Mapped</b>: the percent of reads which are mapped on this genome;</li>
            <li><b>%Unmapped</b>: the percent of reads which are not mapped on this genome;</li>
            <li><b>%One_hit_one_library</b>: the percent of reads which are mapped with one hit on one genome;</li>
            <li><b>%Multiple_hits_one_library</b>: the percent of reads which are multi-mapped on this genome;</li>
            <li><b>%One_hit_multiple_libraries</b>: the percent of reads which are mapped with one hit on several genomes;</li>
            <li><b>%Multiple_hits_multiple_libraries</b>: the percent of reads which are multi-mapped on several genomes.</li>
          </ul>
        </p>
        <p><b>NB</b>: The genome of the sample is used as a positive control.</p>

        <p>List of values for all genomes :
          <ul>
            <li><b>% reads_unmapped_none_genome</b>: the percent of reads which are not mapped on any genome tested;</li>
            <li><b>% reads_mapped_at_least_one_genome</b>: the percent of reads which are mapped on at least one genome;</li>
            <li><b>% reads_mapped_except_genome_sample</b>: the percent of reads which are mapped on the contamination genomes, the genome of the sample is excluded;</li>
          </ul>
        </p>
      </subsection>


      <a name="recoveryclusters"/>
      <subsection name="Analysis of the undetermined clusters from demultiplexing.">

        <p>The undetermined FASTQ files created by the demultiplexing step can be analyzed using 3 modules:</p>
        <ul>
          <li>The recoverable sample clusters module can suggest for each indices, the sample(s) and the number of clusters that can be recovered using a demultiplexing step with one more mismatch that the number of mismatches has been used in the demultiplexing step.
          This module create two files (one for the lanes, the other for the samples) that display for each index the potential sample(s) and the number of recoverable clusters found.</li>
          <li>The FastQC module. Use the "<code>qc.conf.fastqc.process.undetermined.samples</code>" property to enable this module.</li>
          <li>The FastqScreen module. Use the "<code>qc.conf.fastqscreen.process.undetermined.samples</code>" property to enable this module.</li>
        </ul>

        <table>
          <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
          <tr><td>qc.test.sample.recoverable.pf.cluster.count.enable</td><td>boolean</td><td>False</td><td>Compute the passing filter clusters that can be recovered from the undetermined FASTQ files with one more mismatch that the number of mismatches used in demultiplexing step (the maximum number of mismatches is 2)</td></tr>
          <tr><td>qc.test.sample.recoverable.pf.cluster.count.interval</td><td>interval</td><td>False</td><td>Interval for valid values</td></tr>
          <tr><td>qc.test.sample.cluster.recovery.report.enable</td><td>boolean</td><td>False</td><td>Link to the HTML recoverable clusters report</td></tr>
        </table>

        <p>The two reports are generated in CSV and HTML formats:
          <ul>
            <li>Example of a recoverable clusters lanes report:</li>
            <br/>
            <div align="center">
              <img src="images/qc_lane_undetermined_report.png" alt="example on lane recovery cluster report" border="1"/>
            </div>
            <br/>
            <li>Example of a recoverable clusters sample report:</li>
            <br/>
            <div align="center">
              <img src="images/qc_sample_recovery_cluster_report.png" alt="example on sample recovery cluster report" border="1"/>
            </div>
          </ul>
        </p>
      </subsection>

      <a name="syntax_interval"/>
      <subsection name="Syntax of the interval values">

        <p>User can define intervals as the next examples:</p>
        <ul>
          <li><b>[,10]</b> From - infinite to 10 (included)</li>
          <li><b>[,10[</b> From - infinite to 10 (excluded)</li>
          <li><b>[,10)</b> From - infinite to 10 (excluded)</li>
          <li><b>]2,10[</b> From 2 (excluded) to 10 (excluded)</li>
          <li><b>(2,10[</b> From 2 (excluded) to 10 (excluded)</li>
          <li><b>[2,10]</b> From 2 (included) to 10 (included)</li>
          <li><b>[2, ]</b> From 2 (included) to + infinite</li>
        </ul>
      </subsection>
    </section>
  </body>
</document>

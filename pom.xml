<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.ens.biologie.genomique</groupId>
  <artifactId>aozan</artifactId>
  <version>3.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Aozan</name>
  <description>An automated post sequencing data processing pipeline</description>
  <url>http://outils.genomique.biologie.ens.fr/aozan</url>
  <inceptionYear>2011</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <didyouknow>Did you know that aozan is the breton word for prepare?</didyouknow>

    <java.version>11</java.version>
    <htsjdk.version>1.118</htsjdk.version>
    <kenetre.version>0.21</kenetre.version>
    <poi.version>4.1.2</poi.version>
  </properties>
  
  <organization>
    <name>GenomiqueENS</name>
    <url>https://www.genomique.biologie.ens.fr/</url>
  </organization>

  <developers>
    <developer>
      <id>jourdren</id>
      <name>Laurent Jourdren</name>
      <email>aozan 0 biologie ens fr</email>
      <url />
      <organization>École normale supérieure, IBENS, GenomiqueENS</organization>
      <organizationUrl>https://www.genomique.biologie.ens.fr/</organizationUrl>
      <roles>
        <role>Lead Developer</role>
      </roles>
      <timezone>1</timezone>
      <properties />
    </developer>
    <developer>
      <id>perrin</id>
      <name>Sandrine Perrin</name>
      <email>aozan 0 biologie ens fr</email>
      <url />
      <organization>École normale supérieure, IBENS, GenomiqueENS</organization>
      <organizationUrl>https://www.genomique.biologie.ens.fr/</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>1</timezone>
      <properties />
    </developer>
    <developer>
      <id>firmo</id>
      <name>Cyril Firmo</name>
      <email>aozan 0 biologie ens fr</email>
      <url />
      <organization>École normale supérieure, IBENS, GenomiqueENS</organization>
      <organizationUrl>https://www.genomique.biologie.ens.fr/</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>1</timezone>
      <properties />
    </developer>
    <developer>
      <id>lemoine</id>
      <name>Sophie Lemoine</name>
      <email>aozan 0 biologie ens fr</email>
      <url />
      <organization>École normale supérieure, IBENS, GenomiqueENS</organization>
      <organizationUrl>https://www.genomique.biologie.ens.fr/</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>1</timezone>
      <properties />
    </developer>
    <developer>
      <id>lecrom</id>
      <name>Stéphane Le Crom</name>
      <email>aozan 0 biologie ens fr</email>
      <url />
      <organization>École normale supérieure, IBENS, GenomiqueENS</organization>
      <organizationUrl>https://www.genomique.biologie.ens.fr/</organizationUrl>
      <roles>
        <role>Project manager and documentation review</role>
      </roles>
      <timezone>1</timezone>
      <properties />
    </developer>
  </developers>

  <contributors>	
    <contributor>
	  <name>Darren Hart</name>
	  <email />
	  <url />
      <organization>Department of Biochemistry in University of Otago </organization>
	  <organizationUrl>http://biochem.otago.ac.nz</organizationUrl>
	  <roles>
		<role>Testing</role>
	  </roles>
	  <timezone>1</timezone>
	  <properties />
    </contributor>
  </contributors>

  <licenses>
    <license>
      <name>GNU General Public License v3.0</name>
      <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
      <distribution>repo</distribution>
      <comments />
    </license>
    <license>
      <name>CeCILL-C Licence française de logiciel libre</name>
      <url>http://www.cecill.info/licences/Licence_CeCILL_V2-en.html</url>
      <distribution>repo</distribution>
      <comments />
    </license>
  </licenses>

  <mailingLists>
    <mailingList>
      <name>aozan-group</name>
      <subscribe>http://groups.google.com/group/aozan/subscribe</subscribe>
      <!--unsubscribe>http://groups.google.com/group/aozan/unsubscribe</unsubscribe-->
      <archive>http://groups.google.com/group/aozan</archive>
    </mailingList>
  </mailingLists>

  <scm> 	
	<url>https://github.com/GenomiqueENS/aozan</url>
	<connection>scm:git:git://github.com/GenomiqueENS/aozan.git</connection>
	<developerConnection>scm:git:git@github.com:GenomiqueENS/aozan.git</developerConnection>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/GenomiqueENS/aozan/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>genomiqueens</id>
      <name>GenomiqueENS repository</name>
      <url>https://outils.genomique.biologie.ens.fr/maven2</url>
    </repository>
  </repositories>


  <dependencies>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml-schemas</artifactId>
        <version>${poi.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>30.1.1-jre</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>uk.ac.babraham</groupId>
      <artifactId>fastqc</artifactId>
      <version>0.11.9-aozan</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>itadaki</groupId>
      <artifactId>jbzip2</artifactId>
      <version>0.9</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
       <groupId>org.apache.commons</groupId>
       <artifactId>commons-compress</artifactId>
       <version>1.4.1</version>
       <scope>compile</scope>
    </dependency>
    <dependency>
       <groupId>org.apache.commons</groupId>
       <artifactId>commons-math3</artifactId>
       <version>3.2</version>
       <scope>compile</scope>
    </dependency>
    <dependency>
		<groupId>commons-cli</groupId>
		<artifactId>commons-cli</artifactId>
		<version>1.2</version>
		<scope>compile</scope>
	</dependency>
    <dependency>
       <groupId>net.sourceforge.picard</groupId>
       <artifactId>htsjdk</artifactId>
       <version>${htsjdk.version}</version>
       <scope>compile</scope>
    </dependency>
     <dependency>
        <groupId>javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.12.1.GA</version>
       <scope>compile</scope>
    </dependency>

    <!-- Dependency useful to run Docker -->    
    <dependency>
		<groupId>com.spotify</groupId>
		<artifactId>docker-client</artifactId>
		<classifier>shaded</classifier>
		<version>3.1.3</version>
	</dependency>
	
	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.3.5</version>
	</dependency>

	<!-- Required by Docker -->
	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpcore</artifactId>
		<version>4.3.2</version>
		<scope>runtime</scope>
	</dependency>
	
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
		<scope>runtime</scope>
	</dependency>
	
	
	<!-- Required by Docker -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.6</version>
		<scope>runtime</scope>
	</dependency>

       <dependency>
         <groupId>com.google.code.gson</groupId>
         <artifactId>gson</artifactId>
         <version>2.8.6</version>
       </dependency>

       <dependency>
         <groupId>com.sun.mail</groupId>
         <artifactId>javax.mail</artifactId>
         <version>1.6.2</version>
         <scope>compile</scope>
       </dependency>

       <!-- Required by javax.mail with JRE >= 11 -->
       <dependency>
         <groupId>com.sun.activation</groupId>
         <artifactId>javax.activation</artifactId>
         <version>1.2.0</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-core</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-illumina</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-nanopore</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-bio</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-mappers</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-docker</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-storages</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>

       <dependency>
         <groupId>fr.ens.biologie.genomique</groupId>
         <artifactId>kenetre-it</artifactId>
	 <version>${kenetre.version}</version>
         <scope>compile</scope>
       </dependency>


       <!-- Required for Illumina CSV file parsing -->
       <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-csv</artifactId>
	 <version>1.9.0</version>
         <scope>compile</scope>
       </dependency>


  </dependencies>

  <build>
    <directory>target</directory>
    <outputDirectory>target/classes</outputDirectory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
    <sourceDirectory>src/main/java</sourceDirectory>
    <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/java/files</directory>
      </resource>
      <resource>
        <directory>src/main/java/META-INF</directory>
        <targetPath>META-INF</targetPath>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/java/files</directory>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <release>${java.version}</release>
	  <compilerArgs>
		<args>-Xlint</args>
		<args>-XDcompilePolicy=simple</args>
		<args>-Xplugin:ErrorProne</args>
	  </compilerArgs>
          <annotationProcessorPaths>
                <path>
                      <groupId>com.google.errorprone</groupId>
                      <artifactId>error_prone_core</artifactId>
                      <version>2.15.0</version>
                </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <testNGArtifactName>none:none</testNGArtifactName>	
          <skip>false</skip>
        </configuration>
      </plugin>
      <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<version>2.17</version>
			<configuration>
				<encoding>${project.build.sourceEncoding}</encoding>
				<suiteXmlFiles>
					<suiteXmlFile>src/test/testng.xml</suiteXmlFile>
				</suiteXmlFiles>
			</configuration>
			<executions>
				<execution>
					<goals>
						<goal>integration-test</goal>
						<goal>verify</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-ressources</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/generated-resources"/>
                <buildnumber file="${basedir}/build.num"/>
                <tstamp>
                  <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss z" />
                  <format property="YEAR" pattern="yyyy" />
                </tstamp>

<!-- execute git describe -->
                <exec executable="git" failifexecutionfails="false" outputproperty="build.commit">
                  <arg value="describe"/>
                  <arg value="--all"/>
                  <arg value="--long"/>
                </exec>

                <condition property="build.commit" value="">
                  <not>
                    <isset property="build.commit"/>
                  </not>
                </condition>

                <exec executable="hostname" outputproperty="build.host"/>

                <manifest file="${basedir}/target/generated-resources/MANIFEST.MF">
                  <attribute name="Built-By" value="${user.name}"/>
                  <attribute name="Built-Date" value="${TODAY}"/>  
                  <attribute name="Built-YEAR" value="${YEAR}"/>
                  <attribute name="Built-Commit" value="${build.commit}" />
                  <attribute name="Built-Host" value="${build.host}" /> 

                  <attribute name="Specification-Title" value="${project.name}"/>
                  <attribute name="Specification-Version" value="${project.version}"/>
                  <attribute name="Specification-Vendor" value="${project.organization.name}"/>

                  <attribute name="Implementation-Title" value="${project.name}"/>   
                  <attribute name="Implementation-Version" value="build${build.number}"/>   
		  <attribute name="Implementation-Vendor" value="${project.organization.name}"/>
                  <attribute name="Main-Class" value="fr.ens.biologie.genomique.aozan.aozan3.Main" />

                </manifest>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/classes/META-INF" />
                <copy file="${basedir}/target/generated-resources/MANIFEST.MF"
                  tofile="${basedir}/target/classes/META-INF/MANIFEST.MF" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>create-dist</id>
            <phase>package</phase>
            <configuration>
              <tasks unless="distrib.package.skip">

		      <!-- Package binary distribution -->

                <mkdir dir="${basedir}/target/dist/lib"/>

				<copy file="${basedir}/INSTALL.txt" todir="${basedir}/target/dist/" />
				<copy file="${basedir}/LICENSE-GPL.txt" todir="${basedir}/target/dist/" />
				<copy file="${basedir}/LICENSE-CeCILL.txt" todir="${basedir}/target/dist/" />

                <copy file="${basedir}/src/main/bin/${project.artifactId}.sh" todir="${basedir}/target/dist/" />
                <chmod file="${basedir}/target/dist/${project.artifactId}.sh" perm="ugo+rx" />

                <copy file="${basedir}/target/${project.artifactId}-${project.version}.jar" todir="${basedir}/target/dist/lib" />
                <move file="${basedir}/target/dist/" tofile="${basedir}/target/dist/${project.artifactId}-${project.version}"/>

                <!-- Package source distribution -->

                <mkdir dir="${basedir}/target/dist-src/"/>
                <copy todir="${basedir}/target/dist-src/">
                  <fileset dir="${basedir}">
                    <include name="src/**"/>
                    <include name="pom.xml"/>
                    <include name="checkstyle.xml"/>
                    <include name="checkstyle-license.txt"/>
                    <include name="COMPILING.txt"/>
                    <include name="INSTALL.txt"/>
                    <include name="LICENSE-GPL.txt"/>
                    <include name="LICENSE-CeCILL-C.txt"/>
                  </fileset>
                </copy>
                <move file="${basedir}/target/dist-src/" tofile="${basedir}/target/dist-src/${project.artifactId}-${project.version}"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>compress-dists</id>
            <phase>package</phase>
            <configuration>
              <tasks unless="distrib.package.compression.skip">

                <!-- skip this task with command: mvn -Ddistrib.package.compression.skip=true -->
                <!-- Compress dist-src -->


                <tar longfile="gnu" destfile="${basedir}/target/${project.artifactId}-${project.version}.tar">
                  <tarfileset dir="${basedir}/target/dist"  mode="644" dirmode="755" username="nobody" group="nobody">
                    <include name="*/**"/>
                    <exclude name="${project.artifactId}-${project.version}/${project.artifactId}.sh" />
		    <exclude name="${project.artifactId}-${project.version}/bin/*" />
                  </tarfileset>
                  <tarfileset dir="${basedir}/target/dist"  mode="755" dirmode="755" username="nobody" group="nobody">
                    <include name="${project.artifactId}-${project.version}/${project.artifactId}.sh" />
                    <include name="${project.artifactId}-${project.version}/bin.*" />
                  </tarfileset>
                </tar>
                <gzip zipfile="${basedir}/target/${project.artifactId}-${project.version}.tar.gz"
                      src="${basedir}/target/${project.artifactId}-${project.version}.tar"/>
                <bzip2 destfile="${basedir}/target/${project.artifactId}-${project.version}.tar.bz2"
                       src="${basedir}/target/${project.artifactId}-${project.version}.tar"/>
                <untar src="${basedir}/target/${project.artifactId}-${project.version}.tar" 
                       dest="${basedir}/target/tar-bin"/>
                <zip destfile="${basedir}/target/${project.artifactId}-${project.version}.zip"
                     basedir="${basedir}/target/tar-bin"/>

                <!-- Compress dist-src -->
                <tar longfile="gnu" tarfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar">
                  <tarfileset dir="${basedir}/target/dist-src"  mode="755" username="nobody" group="nobody">
                    <include name="*/**"/>
                  </tarfileset>
                </tar>

                <gzip zipfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar.gz"
                      src="${basedir}/target/${project.artifactId}-src-${project.version}.tar"/>
                <bzip2 destfile="${basedir}/target/${project.artifactId}-src-${project.version}.tar.bz2"
                       src="${basedir}/target/${project.artifactId}-src-${project.version}.tar"/>

                <untar src="${basedir}/target/${project.artifactId}-src-${project.version}.tar" 
                       dest="${basedir}/target/tar-src"/>
                <zip destfile="${basedir}/target/${project.artifactId}-src-${project.version}.zip"
                     basedir="${basedir}/target/tar-src"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>replace-variables-site</id>
            <phase>site</phase>
            <configuration>
              <tasks>
                <replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.url}">
                  <include name="**/*.jnlp"/>
                  <include name="**/*.html"/>
                  <include name="**/*.rss"/>
                  <include name="**/*.sh"/>
                  <replacetoken>@@@WEBSITE@@@</replacetoken>
                </replace>
                <replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.version}">
                  <include name="**/*.jnlp"/>
                  <include name="**/*.html"/>
                  <include name="**/*.rss"/>
                  <include name="**/*.sh"/>
                  <replacetoken>@@@VERSION@@@</replacetoken>
                </replace>
                <replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.name}">
                  <include name="**/*.jnlp"/>
                  <include name="**/*.html"/>
                  <include name="**/*.rss"/>
                  <include name="**/*.sh"/>
                  <replacetoken>@@@APPNAME@@@</replacetoken>
                </replace>
                <replace encoding="UTF-8" dir="${basedir}/target/site" value="${project.artifactId}">
                  <include name="**/*.jnlp"/>
                  <include name="**/*.html"/>
                  <include name="**/*.rss"/>
                  <include name="**/*.sh"/>
                  <replacetoken>@@@APPNAMEMIN@@@</replacetoken>
                </replace>

                <tstamp>
                  <format property="TODAY_UK" pattern="EEE, dd MMM yyyy HH:mm:ss z" locale="en,UK"/>
                </tstamp>
                <replace encoding="UTF-8" dir="${basedir}/target/site" value="${TODAY_UK}">
                  <include name="**/*.jnlp"/>
                  <include name="**/*.html"/>
                  <include name="**/*.rss"/>
                  <include name="**/*.sh"/>
                  <replacetoken>@@@DATE@@@</replacetoken>
                </replace>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>integrate-archives-site</id>
			<phase>install</phase>
	        <configuration>
	          <tasks unless="distrib.package.compression.skip">

	            <!-- skip this task with command: mvn -Ddistrib.package.skip=true -->

	            <mkdir dir="${basedir}/target/site" />

	            <copy file="${basedir}/target/${project.artifactId}-${project.version}.tar.gz"
	               todir="${basedir}/target/site"/>
	            <copy file="${basedir}/target/${project.artifactId}-src-${project.version}.tar.gz"
	               todir="${basedir}/target/site"/>
	            <copy file="${basedir}/target/${project.artifactId}-${project.version}.tar.bz2"
	               todir="${basedir}/target/site"/>
	            <copy file="${basedir}/target/${project.artifactId}-src-${project.version}.tar.bz2"
	               todir="${basedir}/target/site"/>
	            <copy file="${basedir}/target/${project.artifactId}-${project.version}.zip"
	               todir="${basedir}/target/site"/>
	            <copy file="${basedir}/target/${project.artifactId}-src-${project.version}.zip"
	               todir="${basedir}/target/site"/>
	          </tasks>
	        </configuration>
	        <goals>
	          <goal>run</goal>
	        </goals>
	      </execution>          
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
		<manifestEntries>
			<mode>development</mode>
			<url>${project.url}</url>
		</manifestEntries>
            <manifestFile>${basedir}/target/generated-resources/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
	<version>3.1.1</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <!--includeArtifactIds>jython-standalone,eoulsan,poi,guava,fastqc,jbzip2,commons-compress,htsjdk,commons-math3,commons-cli,javassist,aws-java-sdk,docker-client,httpclient,httpcore,commons-logging,slf4j-api</includeArtifactIds-->
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${basedir}/target/dist/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.12.1</version>
        <configuration>
          <templateFile>${basedir}/src/site/site.vm</templateFile>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
       <!-- add plugin for test with Jenkins : static analysis code -->
        <!-- PLUG-IN Checkstyle -->
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-checkstyle-plugin</artifactId>
           <version>3.0.0</version>
           <configuration>
              <configLocation>./checkstyle.xml</configLocation>
           </configuration>
        </plugin>

        <!-- PLUG-IN Findbugs -->
        <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>findbugs-maven-plugin</artifactId>
           <version>3.0.1</version>
           <configuration>
              <effort>Max</effort>
              <xmlOutput>true</xmlOutput>
           </configuration>
        </plugin>

		<!-- PLUG-in for static analysis code -->
		<!-- mvn modernizer:modernizer -->
		<plugin>
		  <groupId>org.gaul</groupId>
		  <artifactId>modernizer-maven-plugin</artifactId>
		  <version>2.4.0</version>
                  <executions>
                    <execution>
                     <id>modernizer</id>
                     <phase>verify</phase>
                     <goals>
                       <goal>modernizer</goal>
                     </goals>
                    </execution>
                  </executions>
		  <configuration>
		    <javaVersion>${java.version}</javaVersion>
		  	<failOnViolations>False</failOnViolations>
		  </configuration>
		</plugin>
		
    </plugins>
  </build>


  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
		<version>3.4.1</version>
		<configuration>
			<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
		</configuration>
                                <reportSets>
                                        <reportSet>
                                                <reports>
                                                        <report>team</report>
                                                        <report>mailing-lists</report>
                                                        <report>issue-management</report>
                                                        <report>licenses</report>
                                                        <report>scm</report>
                                                </reports>
                                        </reportSet>
                                </reportSets>
      </plugin>
      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-changes-plugin</artifactId>
		<version>2.12.1</version>
	  </plugin>
	  
	  <plugin>
		<artifactId>maven-javadoc-plugin</artifactId>
		<version>3.4.1</version>
		<configuration>
			<encoding>utf-8</encoding>
			<doctitle>${project.name} ${project.version} API</doctitle>
			<overview>${basedir}/src/main/java/overview.html</overview>
			<quiet>true</quiet>
		</configuration>
		<reportSets>
			<reportSet>
				<id>default</id>
				<configuration/>
				<reports>
					<report>javadoc</report>
				</reports>
			</reportSet>
		</reportSets>
	  </plugin>
	  
      <!-- plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>changes-maven-plugin</artifactId>
        <version>2.0-beta-1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin -->
    </plugins>
  </reporting>

</project>
